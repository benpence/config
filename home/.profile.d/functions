#!/bin/sh
# Aliases
alias 'mkdir=mkdir -p'  # Make directories as needed
alias 'l=ls --color'    # ls color output
alias 'less=less -R'    # less displays color
alias 'emacs=emacsclient -nw -c' # Console emacs only
alias 'vim=vim -p'      # Open multiple files in tabs

ekill(){
    emacsclient -e '(kill-emacs)'
    /usr/bin/emacs --daemon 2>&- &
}

# Custom functions
wifi(){
    while [ "0" != `sudo ip link set down wifi0 && sudo netctl restart "$@"; echo $?` ]; do
        echo Trying...;
        sudo journalctl -xn --no-pager
    done;

    echo "Connected."
}

# Open browser or default application for file
o(){
    if [[ "$#" == "0" ]]; then
        chromium $HOME
    else
        xdg-open $@
    fi
}

# Open chromium with semi-permanent incognito mode.
#   Good if you need to do something in a new browsing environment and may want
#     to keep session data
#   Example use: P=127.0.0.1:9999; polychromium --proxy-server="http=$P;https=$P"
polychromium(){
    d=$( mktemp -d )
    chromium --user-data-dir=$d $@;

    dialog --yesno "Discard Chromium data?" 6 26
    if [[ "$?" == "0" ]]; then
        rm -rf $d;
    else
        echo $d;
    fi
}

# Ensure destination directory (or destination containing-directory) exists before copy
# Examples:
#   find dir/ -type f -mtime -30 | while read f; do mk cp -a "$f" "/non/existent/directory/$f"; done;
#   mk mv ~/Downloads/default.conf /non/existent/directory/my.conf
mk(){
    # Destination is directory -> Create directory
    if [[ "${@: -1}" =~ "/$" ]]; then
        mkdir -p "${@: -1}"

    # Destination is filename -> Create containing directory
    else
        mkdir -p "$( dirname ${@: -1} )"
    fi;

    $@
}

# Backup last argument by appending '~' character. Recursively copies directory if applicable.
# Examples:
#   # Copies FILE to FILE~ and deletes original
#   bk rm FILE
#
#   # Backs up FILE to FILE~ before inline replacing all 'b' characters with 'a'
#   bk sed -i 's/a/b/' FILE
bk(){
    local last="${@: -1}"

    # Remove trailing slash
    last="$(sed 's/\/$//' <<< "$last")"

    while [[ -a "${last}~" ]]; do
        last="${last}~"
    done

    # Destination is directory -> Cp recursive and handle optional '/'
    if [[ -d "$last" ]]; then
        cp -a "$last" "${last}~"
    fi;

    # Run command if more than one argument
    if [[ $# -ne 1 ]]; then
        $@
    fi
}

# Record your actions their timings and timestamp the results
record(){
    PREFIX="${1:-}"
    d=$(date +"%Y-%m-%d_%H-%M-%S.%N")

    local actions="${PREFIX}${d}_actions.script"
    local timing="${PREFIX}${d}_timing.script"

    RECORDING=1 script --quiet --timing="$timing" "$actions" 2> /dev/null

    echo $actions $timing
}
